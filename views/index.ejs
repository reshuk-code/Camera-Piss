<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>The Browser Camera</title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <h1>The Browser Cam</h1>
  <div id="camera-container">
    <video id="video" autoplay></video>
    <canvas id="canvas" style="display: none;"></canvas>
  </div>
  <button class="take-photo">Take Photo</button>
  <button class="upload-photo" style="display: none;">Upload Photo</button>
  
  <!-- Error message container -->
  <div id="error-message" style="color: red; display: none;">
    Please allow the camera to take a photo.
  </div>

  <script>
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const takePhotoButton = document.querySelector('.take-photo');
    const uploadPhotoButton = document.querySelector('.upload-photo');
    const errorMessage = document.getElementById('error-message'); // Error message element

    // Access the camera
    async function startCamera() {
      try {
        const stream = await navigator.mediaDevices.getUserMedia({ video: true });
        video.srcObject = stream;
      } catch (error) {
        // Display error message when camera permission is denied
        errorMessage.style.display = 'block';
      }
    }

    // Capture photo
    takePhotoButton.addEventListener('click', () => {
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;
      const context = canvas.getContext('2d');
      context.drawImage(video, 0, 0, canvas.width, canvas.height);

      // Show the upload button
      uploadPhotoButton.style.display = 'inline-block';
      takePhotoButton.style.display = 'none';
    });

    // Upload photo
    uploadPhotoButton.addEventListener('click', () => {
      canvas.toBlob((blob) => {
        const formData = new FormData();
        formData.append('file', blob, 'photo.png');

        fetch('/upload', {
          method: 'POST',
          body: formData,
        })
          .then((response) => response.json())
          .then((data) => {
            console.log('Photo uploaded successfully:', data);
          })
          .catch((error) => {
            console.error('Error uploading photo:', error);
          });
      }, 'image/png');
    });

    // Start the camera when the page loads
    window.onload = startCamera;
  </script>
</body>
</html>
